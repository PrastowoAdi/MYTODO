import { AppProps } from "next/app";
import "../styles/globals.css";
import React, { useEffect, useRef, useState } from "react";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import { Navbar, Sidebar } from "@/components";
import { AnimatePresence } from "framer-motion";
import Head from "next/head";

const App = ({ Component, pageProps }: AppProps) => {
  const [queryClient] = React.useState(() => new QueryClient());
  const [sidebarOpen, setSidebarOpen] = useState<boolean>(false);

  const [width, setWidth] = useState(
    typeof window !== "undefined" && window.innerWidth
  );
  const updateDimensions = () => {
    setWidth(typeof window !== "undefined" && window.innerWidth);
  };

  useEffect(() => {
    window.addEventListener("resize", updateDimensions);
    return () => window.removeEventListener("resize", updateDimensions);
  }, []);

  useEffect(() => {
    if (Number(width) < 950 && sidebarOpen) {
      setSidebarOpen(false);
    }
  }, [width]);

  return (
    <>
      <QueryClientProvider client={queryClient}>
        <ReactQueryDevtools />
        <Head>
          <title>MY NOTES</title>
          <meta name="description" content="Generated by love" />
        </Head>
        <Navbar
          setOpenSideBar={() => {
            setSidebarOpen(!sidebarOpen);
          }}
        />
        <div className="relative md:flex">
          <AnimatePresence>
            {sidebarOpen && (
              <div className="absolute w-[50%] md:relative md:w-1/3 lg:w-1/5 h-screen bg-[#FAFAFA] shadow-md select-none z-50">
                <Sidebar />
              </div>
            )}
          </AnimatePresence>
          <Component {...pageProps} />
        </div>
      </QueryClientProvider>
    </>
  );
};

export default App;
